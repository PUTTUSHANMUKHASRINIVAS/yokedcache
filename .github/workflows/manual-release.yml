name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.3.0)'
        required: true
        type: string
      prerelease:
        description: 'Mark as prerelease'
        required: false
        type: boolean
        default: false
      draft:
        description: 'Create as draft release'
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  manual-release:
    name: Create Manual Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Verify version
        run: |
          PACKAGE_VERSION=$(python -c "
          import sys
          sys.path.insert(0, 'src')
          import yokedcache
          print(yokedcache.__version__)
          ")

          echo "Package version: $PACKAGE_VERSION"
          echo "Input version: ${{ github.event.inputs.version }}"

          if [ "$PACKAGE_VERSION" != "${{ github.event.inputs.version }}" ]; then
            echo "❌ Version mismatch!"
            echo "Package version ($PACKAGE_VERSION) doesn't match input version (${{ github.event.inputs.version }})"
            echo "Please update src/yokedcache/__init__.py to version ${{ github.event.inputs.version }} first"
            exit 1
          fi

          echo "✅ Version verified: $PACKAGE_VERSION"

      - name: Check if tag exists
        id: tag-check
        run: |
          TAG="v${{ github.event.inputs.version }}"
          if git tag --list | grep -q "^${TAG}$"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag $TAG already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag $TAG does not exist, will create it"
          fi

      - name: Create tag
        if: steps.tag-check.outputs.exists == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          TAG="v${{ github.event.inputs.version }}"
          git tag -a "$TAG" -m "Manual release $TAG"
          git push origin "$TAG"

      - name: Generate changelog
        run: |
          CURRENT_TAG="v${{ github.event.inputs.version }}"

          # Find previous tag
          PREV_TAG=$(git tag --sort=-v:refname | grep -v "^${CURRENT_TAG}$" | head -n1 || echo "")

          if [ -n "$PREV_TAG" ]; then
            RANGE="$PREV_TAG..HEAD"
          else
            RANGE="HEAD"
          fi

          export CURRENT_TAG PREV_TAG RANGE
          python scripts/gen_changelog.py > release_notes.md

          echo "Generated release notes:"
          cat release_notes.md

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body_path: release_notes.md
          files: |
            dist/*.whl
            dist/*.tar.gz
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          echo "✅ Successfully created manual release for v${{ github.event.inputs.version }}!"
          echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/v${{ github.event.inputs.version }}"
