name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (must match package version)'
        required: true
        type: string
      environment:
        description: 'PyPI environment to publish to'
        required: true
        type: choice
        options:
          - pypi
          - testpypi
        default: pypi

permissions:
  id-token: write  # For trusted publishing
  contents: read

jobs:
  verify-and-test:
    name: Verify Version and Run Tests
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Verify version matches package
        run: |
          PACKAGE_VERSION=$(python -c "
          import sys
          sys.path.insert(0, 'src')
          import yokedcache
          print(yokedcache.__version__)
          ")

          echo "Package version: $PACKAGE_VERSION"
          echo "Input version: ${{ github.event.inputs.version }}"

          if [ "$PACKAGE_VERSION" != "${{ github.event.inputs.version }}" ]; then
            echo "‚ùå Version mismatch!"
            echo "Package version ($PACKAGE_VERSION) doesn't match input version (${{ github.event.inputs.version }})"
            echo "Please update src/yokedcache/__init__.py to version ${{ github.event.inputs.version }}"
            exit 1
          fi

          echo "‚úÖ Version verified: $PACKAGE_VERSION"

      - name: Check if version tag exists
        run: |
          TAG="v${{ github.event.inputs.version }}"
          if ! git tag --list | grep -q "^${TAG}$"; then
            echo "‚ùå Tag $TAG does not exist!"
            echo "Please create a GitHub release first using the release.yml workflow"
            echo "or manually create the tag: git tag $TAG && git push origin $TAG"
            exit 1
          fi
          echo "‚úÖ Tag $TAG exists"

      - name: Run tests
        run: |
          pytest --cov=yokedcache --cov-report=xml --cov-report=term-missing

      - name: Check formatting
        run: |
          black --check src tests examples

      - name: Check import sorting
        run: |
          isort --check-only --diff src tests examples

      - name: Type check
        run: |
          mypy src --ignore-missing-imports

  build-and-publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    needs: verify-and-test
    environment:
      name: ${{ github.event.inputs.environment }}
      url: ${{ github.event.inputs.environment == 'pypi' && 'https://pypi.org/p/yokedcache' || 'https://test.pypi.org/p/yokedcache' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

          # Show package info
          echo "üì¶ Built packages:"
          ls -la dist/

          echo "üìã Package contents:"
          python -m tarfile -l dist/*.tar.gz | head -20

      - name: Publish to PyPI
        if: github.event.inputs.environment == 'pypi'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true

      - name: Publish to Test PyPI
        if: github.event.inputs.environment == 'testpypi'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          print-hash: true

      - name: Verify publication
        run: |
          echo "‚úÖ Successfully published yokedcache v${{ github.event.inputs.version }} to ${{ github.event.inputs.environment }}!"
          if [ "${{ github.event.inputs.environment }}" = "pypi" ]; then
            echo "üéâ Package is now available at: https://pypi.org/project/yokedcache/${{ github.event.inputs.version }}/"
            echo "üì¶ Install with: pip install yokedcache==${{ github.event.inputs.version }}"
          else
            echo "üß™ Test package is available at: https://test.pypi.org/project/yokedcache/${{ github.event.inputs.version }}/"
            echo "üì¶ Install with: pip install --index-url https://test.pypi.org/simple/ yokedcache==${{ github.event.inputs.version }}"
          fi
